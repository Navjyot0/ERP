01. .Net Core [52]
02. C# & OOPs [424]
03. LINQ [37]
04. SQL [260]
05. Entity Framework [55]
06. ASP.NET MVC [132]
07. ASP.NET Web API [79]
08. Typescript [39]
09. Angular [112]
---------
10. SOLID
---------
11. Design Patterns [46]
12. GIT [36]
13. Agile & Scrum [47]
14. DevOps [44]
15. HTML [55]
16. CSS [60]
17. JavaScript [172]
18. WCF [35]
19. ADO.NET [33]
20. jQuery [51]
21. MSBI [30]

===================================
.Net Core [52]
===================================
Q1: What is .NET Core?
Q2: What is the difference between String and string in C#?
Q3: What is the .NET Framework?
Q4: What is .NET Standard?
Q5: What you understand by Value types and Reference types in .NET? Provide some comparison.  Related To: C#
Q6: What is Boxing and Unboxing?  Related To: C#
Q7: What are some characteristics of .NET Core?
Q8: What is the difference between .NET Core and Mono?
Q9: What's the difference between SDK and Runtime in .NET Core?
Q10: What is the difference between decimal, float and double in .NET?
Q11: What is an unmanaged resource in .NET? 
Q12: What is CLR?
Q13: What is CTS?
Q14: What is a .NET application domain?
Q15: Name some CLR services?
Q16: What is .NET Standard and why we need to consider it?
Q17: What is MSIL?
Q18: What's the difference between .NET Core, .NET Framework, and Xamarin?
Q19: What is Kestrel?
Q20: What is difference between .NET Core and .NET Framework?
Q21: Explain what is included in .NET Core?
Q22: Explain two types of deployment for .NET Core applications
Q23: Is there a way to catch multiple exceptions at once and without code duplication?  Related To: C#
Q24: Explain the difference between Task and Thread in .NET  Related To: C#
Q25: What is CoreCLR?
Q26: Why to use of the IDisposable interface?  Related To: C#
Q27: What are the benefits of Explicit Compilation (AOT)?
Q28: When should we use .NET Core and .NET Standard Class Library project types?
Q29: What's is BCL?
Q30: What is Explicit Compilation?
Q31: What is the difference between Class Library (.NET Standard) and Class Library (.NET Core)?
Q32: What is FCL?
Q33: Explain the difference between Managed and Unmanaged code in .NET?
Q34: What is JIT compiler?
Q35: What does Common Language Specification (CLS) mean?
Q36: What is the difference between .NET Standard and PCL (Portable Class Libraries)?
Q37: What about MVC in .NET Core?  Related To: ASP.NET MVC
Q38: Does .NET support Multiple Inheritance?  Related To: OOP
Q39: What is the difference between .NET Framework/Core and .NET Standard Class Library project types?
Q40: What's the difference between RyuJIT and Roslyn?
Q41: Explain how does Asynchronous tasks Async/Await work in .NET?  Related To: C#
Q42: What is the difference between AppDomain, Assembly, Process and a Thread?
Q43: How to choose the target version of .NET Standard library?
Q44: Why does .NET use a JIT compiler instead of just compiling the code once on the target machine?
Q45: Explain Implicit Compilation process
Q46: What are benefits of using JIT?
Q47: What is the difference between CIL and MSIL (IL)?
Q48: Why does .NET Standard library exist?
Q49: Explain when to use Finalize vs Dispose?  Related To: C#
Q50: What is the difference between Node.js async model and async/await in .NET?
Q51: How many types of JIT Compilations do you know?
Q52: Could you name the difference between .Net Core, Portable, Standard, Compact, UWP, and PCL?

======================================
C# & OOPs [424]
======================================
Q1: What is COM and what are the disadvantages of COM?
Q2: What .NET Represents?
Q3: What is a Framework and what does the .NET Framework provide?
Q4: Explain CLR and its Execution Process.
Q5: What is exactly .NET?
Q6: What are the language and its need?
Q7: What are Technology and its need?
Q8: What is Visual Studio?
Q9: Explain about BCL.
Q10: What is the Just-In-Time (JIT) compilation?
Q11: What are Metadata and an assembly?
Q12: What are the differences between managed code and unmanaged code?
Q13: What is C#?
Q14: What is the difference between an EXE and a DLL?
Q15: What’s the difference between IEnumerable<T> and List<T>?
Q16: Why is class an abstract data type?
Q17: What are the new features introduced in C# 7?
Q18: Why should you override the ToString() method?
Q19: What is the difference between string keyword and System.String class?
Q20: Are string objects mutable or immutable in C#?
Q21: What do you mean by String objects are immutable?
Q22: What is a verbatim string literal and why do we use it?
Q23: How do you create empty strings in C#?
Q24: What is the difference between System.Text.StringBuilder and System.String?
Q25: How do you determine whether a String represents a numeric value?
Q26: What is the difference between int.Parse and int.TryParse methods?
Q27: What are Properties in C#? Explain with an example?
Q28: What are the different types of properties available in C#?
Q29: What are the advantages of using properties in C#?
Q30: What is a static property? Give an example?
Q31: What is Virtual Property in C#? Give an example?
Q32: What is an Abstract Property in C#? Give an example?
Q33: Can you use virtual, override, or abstract keywords on an accessor of a static property? 
Q34: What are the 2 broad classifications of data types available in C#?
Q35: How do you create user-defined data types in C#?
Q36: Difference between int and Int32 in C#
Q37: What are the differences between value types and reference types?
Q38: What do you mean by casting a data type?
Q39: What are the 2 kinds of data type conversions available in C#?
Q40: What is the difference between an implicit conversion and an explicit conversion?
Q41: What is the difference between int.Parse and int.TryParse methods?
Q42: What is Boxing and Unboxing in C#?
Q43: What happens during the process of boxing?
Q44: What are Access Modifiers in C#?
Q45: Can we use all access modifiers for all types?
Q46: Can derived classes have greater accessibility than their base types?
Q47: Can the accessibility of a type member be greater than the accessibility of its containing type?
Q48: Can destructors have access modifiers?
Q49: What do protected internal access modifiers mean?
Q50: Can you specify an access modifier for an enumeration?
Q51: What are the 4 pillars of any object-oriented programming language?
Q52: Do structs support inheritance in C#?
Q53: What is the main advantage of using inheritance in C#?
Q54: Does C# support multiple class inheritance?
Q55: Why does C# not support multiple class inheritance?
Q56: What are the differences between interfaces and abstract classes?
Q57: When do you choose interface over an abstract class or vice versa?
Q58: What are the advantages of using interfaces?
Q59: Can an Interface contain fields?
Q60: What is the difference between class inheritance and interface inheritance?
Q61: Can an interface inherit from another interface?
Q62: Can you create an instance of an interface?
Q63: What do you mean by “Explicitly Implementing an Interface”? Give an example?
Q64: When to use Interface?
Q65: When to use Abstract Classes in C#?
Q66: What is an Abstract Class?
Q67: Can you create an instance of an abstract class?
Q68: What is a Sealed Class?
Q69: What is the abstract method in C#?
Q70: When to use the abstract method?
Q71: Can a sealed class be used as a base class?
Q72: Can an abstract class have a constructor? If so what is the use?
Q73: We cannot create an instance of an abstract class. So, what is the use of a constructor in an abstract class?
Q74: An abstract method in an abstract class does not have any implementation, so what is the use of calling it from the abstract class constructor?
Q75: When should a class be declared as abstract?
Q76: When should a method be declared as sealed?
Q77: What is the difference between the private and sealed method?
Q78: When should a class be declared as sealed?
Q79: What are the differences between an abstract class and a sealed class?
Q80: Why should the method have an abstract keyword if it does not have the body?
Q81: What are the characteristics of an abstract class?
Q82: Why can the abstract class not be instantiated?
Q83: Who will provide the implementation (body) for abstract methods?
Q84: What type of members can we define in an abstract class?
Q85: Will abstract class members are created when a subclass object is created?
Q86: How can we execute static and non-static concrete members of the abstract class?
Q87: Can we declare the abstract method as static?
Q88: Can we declare the concrete class as abstract?
Q89: Explain the differences between overriding methods and abstract methods?
Q90: What is the need for abstract classes in application development?
Q91: What is Polymorphism in C#?
Q92: Explain the different types of Polymorphism in C#?
Q93: What is compile-time Polymorphism in C#?
Q94: What is Runtime Polymorphism in C#?
Q95: Explain different types of Overloading in C#?
Q96: What is function overloading?
Q97: When should we overload methods in C#?
Q98: What are the advantages of using overloading OR what are the disadvantages if we define methods with a different name?
Q99: When is a method considered as an overloaded method?
Q100: Can we overload methods in the same class?
Q101: What is the execution control flow of overloaded methods?
Q102: What is inheritance based overloading?
Q103: What is the function/method overriding?
Q104: When must a method be overridden?
Q105: When is a sub-class method treated as an overriding method?
Q106: How can we override a parent class method under child class?
Q107: How can we execute the superclass method if it is overridden in the sub-class?
Q108: What is the difference between function overloading and function overriding?
Q109: What is method hiding?
Q110: What is the difference between Method Overriding and Method Hiding?
Q111: When can a derived class override a base class member?
Q112: What is the difference between a virtual method and an abstract method?
Q113: What is a partial class? Explain with an example.
Q114: What are the advantages of using Partial Classes in C#?
Q115: Is it possible to create partial structs, interfaces, and methods in C#?
Q116: Can you create partial delegates and enumerations?
Q117: Can different parts of a partial class inherit from different interfaces?
Q118: Can you specify nested classes as Partial Classes?
Q119: How do you create partial methods in C#?
Q120: What is the use of partial methods?
Q121: What is a Nested Type in C#? Give an example?
Q122: Can the nested class access the Containing class. Give an example?
Q123: What is a Constructor in C#?
Q124: Can we define a method with the same class name in C#?
Q125: How many types of constructors are there in C#.net?
Q126: Explain the Default constructor?
Q127: Explain the system-defined default constructor?
Q128: When must the developer provide the constructor explicitly?
Q129: Explain user-defined default constructor?
Q130: When should we define the parameterized constructor in a class?
Q131: Explain about parameterized constructor?
Q132: How many constructors can be defined in a class?
Q133: What is a copy constructor in C#?
Q134: Explain the static constructor in C#?
Q135: Can we initialize non-static data fields within the static constructor?
Q136: Can we initialize static data fields within the non-static constructor?
Q137: Can we initialize static data fields in both static and non-static constructor?
Q138: Explain Private constructor in C#?
Q139: When is a destructor method called?
Q140: When will be the object of a class gets destroyed?
Q141: In C# what will happen if you do not explicitly provide a constructor for a class?
Q142: Structs are not referenced types. Can structs have constructors?
Q143: We cannot create instances of static classes. Can we have constructors for static classes?
Q144: Can you prevent a class from being instantiated?
Q145: Can a class or a struct have multiple constructors?
Q146: Can a child class call the constructor of a base class?
Q147: If a child class instance is created, which class constructor is called first – base class or child class?
Q148: Can a class have a static constructor in C#?
Q149: Can you mark a static constructor with access modifiers?
Q150: Can you have parameters for static constructors?
Q151: What happens if a static constructor throws an exception?
Q152: Give 2 scenarios where static constructors can be used?
Q153: What is Destructor?
Q154: Can a class have more than 1 destructor?
Q155: Can structs in C# have destructors?
Q156: Can you pass parameters to destructors?
Q157: Can you explicitly call a destructor?
Q158: Why is it not a good idea to use Empty destructors?
Q159: What is a Constructor in C#?
Q160: Is it possible to force the garbage collector to run?
Q161: Usually, in .NET, the CLR takes care of memory management. Is there any need for a programmer to explicitly release memory and resources? If yes, why and how?
Q162: When do we generally use destructors to release resources?
Q163: When to use a Private constructor in c#?
Q164: What are the constants in C#?
Q165: Can you declare a class or a struct as constant?
Q166: Does C# support const methods, properties, or events?
Q167: Can you change the value of a constant filed after its declaration?
Q168: How do you access a constant field declared in a class in C#?
Q169: What is the difference between const and read-only?
Q170: What are the 2 broad classifications of fields in C#?
Q171: What are the instance fields in C#?
Q172: What is a static field in C#?
Q173: Can you declare a field read-only in C#?
Q174: What is the difference between a constant and a static read-only field?
Q175: Static members cannot access an object can you give the reason why?
Q176: Can we Overload the main() method in C#?
Q177: Why is C# main method static?
Q178: What is the difference between method parameters and method arguments?
Q179: Explain the difference between passing parameters by value and passing parameters by reference in C#?
Q180: Can we pass value types by reference to a method?
Q181: If a method’s return type is void, can you use a return keyword in the method?
Q182: What is the difference between static class and class with static methods? In which case I should use either of them?
Q183: What is a recursive function in c#? Give an example.
Q184: What is a Delegate in C#? Explain with one example.
Q185: Types of Delegates in C#.
Q186: What is Single Cast Delegate in C#
Q187: What is Multicast Delegate in C#? Explain with one example.
Q188: Where do you use multicast delegates?
Q189: Where did you use delegates in your project?
Q190: What are the Thread and Process?
Q191: What is the difference between Process and Thread?
Q192: Why we need Multi-threading in our project?
Q193: What are the advantages and disadvantages of multithreading in C#?
Q194: How can we create a Thread in C#?
Q195: Why does a delegate need to be passed as a parameter to the Thread class constructor?
Q196: How to pass the parameter in Thread?
Q197: Why we need a ParameterizedThreadStart delegate?
Q198: When to use ParameterizedThreadStart over ThreadStart delegate?
Q199: How to pass data to the thread function in a type-safe manner?
Q200: How to retrieve the data from a thread function?
Q201: What is the difference between Threads and Tasks?
Q202: What is the Significance of Thread.Join and Thread.IsAlive functions in multithreading?
Q203: What happens if shared resources are not protected from concurrent access in a multithreaded program?
Q204: How to protect shared resources from concurrent access?
Q205: What are the Interlocked functions?
Q206: What is Lock?
Q207: What is the Difference between Monitor and lock in C#?
Q208: Explain why and how a deadlock can occur in multithreading with an example?
Q209: How to resolve a deadlock in a multithreaded program?
Q210: What is AutoResetEvent and how it is different from ManualResetEvent?
Q211: What is the Semaphore?
Q212: Explain Mutex and how it is different from other Synchronization mechanisms?
Q213: What is the Race condition?
Q214: How can you share data between multiple threads?
Q215: What are Concurrent Collection Classes?
Q216: What is synchronization and why it is important?
Q217: Explain the four necessary conditions for Deadlock?
Q218: What is LiveLock?
Q219: Explain different types of errors in C#.
Q220: What is a Compilation Error and Runtime Error in C#?
Q221: What is an Exception?
Q222: Who is responsible for abnormal termination of the program whenever runtime errors occur?
Q223: What happens if an exception is raised in the program?
Q224: What CLR does when a logical mistake occurred in the program?
Q225: Explain Exception Handling?
Q226: Why we need exception handling?
Q227: What is the Exception Handling Procedure?
Q228: How can we handle the exception in .NET?
Q229: Explain the difference between Error and Exception in C#?
Q230: What is the difference between System exceptions and Application exceptions?
Q231: Explain about try-catch implementation.
Q232: Explain the Different Properties of the Exception class in C#.
Q233: Can we catch all exceptions using a single catch block?
Q234: When should we write multiple catch blocks for a single try block?
Q235: Explain about the finally block
Q236: Why we need finally block in the real-time project?
Q237: How many ways we can use try-catch and finally?
Q238: What happens if the finally block throws an exception?
Q239: What is the difference between the “throw” and “throw ex” in .NET?
Q240: What is Inner Exception?

Q241: What is C#?  
Q242: What is an Object?  
Q243: What is the difference between continue and break statements in C#?  
Q244: What are Property Accessors?  
Q245: What is the difference between a Struct and a Class in C#?  
Q246: What is an Abstract Class?  
Q247: What is namespace in C#?  
Q248: What are Nullable types in C#?  
Q249: How is Exception Handling implemented in C#?  
Q250: What you understand by Value types and Reference types in .NET? Provide some comparison.  Related To: .NET Core
Q251: What is Serialization?  
Q252: What are the different types of classes in C#?  
Q253: What is the difference between string and StringBuilder in C#?  
Q254: What is LINQ in C#?  Related To: LINQ
Q255: What are Reference Types in C#?  
Q256: What is Managed or Unmanaged Code?  
Q257: Can multiple catch blocks be executed?  
Q258: Can this be used within a Static method?  
Q259: What are partial classes?  
Q260: Why to use finally block in C#?  
Q261: What are generics in C#?  
Q262: What are dynamic type variables in C#?  
Q263: What is Boxing and Unboxing?  Related To: .NET Core
Q264: What is enum in C#?  
Q265: In how many ways you can pass parameters to a method?  
Q266: Explain Anonymous type in C#  
Q267: Explain Code Compilation in C#  
Q268: What is scope of a Internal member variable of a C# class?  
Q269: What is the difference between ref and out keywords?  
Q270: What is Virtual Method in C#?  
Q271: What is the difference between dynamic type variables and object type variables?  
Q272: What is difference between constant and readonly?  
Q273: Is there a difference between throw and throw ex?  
Q274: What is the difference between Interface and Abstract Class?  Related To: OOP
Q275: What is the difference between Equality Operator (==) and Equals() Method in C#?  
Q276: What are the uses of using in C#  
Q277: What is the difference between Virtual method and Abstract method?  Related To: OOP
Q278: What is Extension Method in C# and how to use them?  
Q279: Why can't you specify the accessibility modifier for methods inside the Interface?  
Q280: What is an anonymous function in C#?  
Q281: What is sealed Class in C#?  
Q282: What is Reflection in C#.Net?  
Q283: What is a Destructor in C# and when shall I create one?  
Q284: How encapsulation is implemented in C#?  
Q285: What is lambda expressions in C#?  
Q286: What is the difference between overloading and overriding?  
Q287: What is the use of Null Coalescing Operator (??) in C#?  
Q288: How can you prevent a class from overriding in C#?  Related To: OOP
Q289: Is there a way to catch multiple exceptions at once and without code duplication?  Related To: .NET Core
Q290: Explain the difference between Task and Thread in .NET  Related To: .NET Core
Q291: Why to use of the IDisposable interface?  Related To: .NET Core
Q292: Test if a Number belongs to the Fibonacci Series CSPY Related To: Fibonacci Series
Q293: Explain what is Ternary Search? CSJava Related To: Searching
Q294: What are pointer types in C#?  
Q295: Can you create a function in C# which can accept varying number of arguments?  
Q296: What is difference between late binding and early binding in C#?  
Q297: What is the difference between is and as operators in C#?  
Q298: What is scope of a Protected Internal member variable of a C# class?  
Q299: Can Multiple Inheritance implemented in C# ?  
Q300: Is operator overloading supported in C#?  
Q301: What interface should your data structure implement to make the Where method work?  
Q302: What is Marshalling and why do we need it?  
Q303: What is the difference between System.ApplicationException class and System.SystemException class?  
Q304: Why to use lock statement in C#?  
Q305: What are the different ways a method can be overloaded?  
Q306: What is the yield keyword used for in C#?  
Q307: IEnumerable vs List - What to Use? How do they work?  
Q308: When to use ArrayList over array[] in C#?  
Q309: What is the use of conditional preprocessor directive in C#?  
Q310: When would you use delegates in C#?  
Q311: What is the Constructor Chaining in C#?  
Q312: What's the difference between StackOverflowError and OutOfMemoryError?  
Q313: What is the difference between dispose and finalize methods in C#?  
Q314: What is Indexer in C#?  
Q315: What is the difference between Func<string,string> and delegate?  
Q316: Explain what is Short-Circuit Evaluation in C#  
Q317: Explain the difference between Select and Where  Related To: LINQ
Q318: What is the best practice to have best performance using Lazy objects?   
Q319: Explain how does Asynchronous tasks Async/Await work in .NET?  Related To: .NET Core
Q320: What happens when we Box or Unbox Nullable types?  
Q321: Can you explain the difference between Interface, abstract class, sealed class, static class and partial class in C#?  
Q322: How to solve Circular Reference?  Related To: OOP
Q323: What is Multicast Delegate in C#?  
Q324: What is jagged array in C# and when to prefer jagged arrays over multi-dimensional arrays?  
Q325: Why Abstract class can not be sealed or static?  
Q326: What are the benefits of a Deferred Execution in LINQ?  Related To: LINQ
Q327: Could you explain the difference between destructor, dispose and finalize method?  
Q328: What are the differences between IEnumerable and IQueryable?  
Q329: What is the difference between Lambdas and Delegates?  
Q330: What is the method MemberwiseClone() doing?  
Q331: What's the difference between the System.Array.CopyTo() and System.Array.Clone()?  
Q332: What are Circular References in C#?  
Q333: What is deep or shallow copy concept in C#?  
Q334: List some different ways for equality check in .NET  
Q335: What is a preprocessor directives in C#?  
Q336: What is the use of static constructors?  
Q337: What is the volatile keyword used for?  
Q338: Explain what is Weak Reference in C#?  
Q339: Could you explain the difference between Func vs. Action vs. Predicate?  
Q340: Can you add extension methods to an existing static class?  
Q341: in C#, when should we use abstract classes instead of interfaces with extension methods?  
Q342: Implement the Where method in C#. Explain.  
Q343: Explain the difference between IQueryable, ICollection, IList & IDictionary interfaces?  
Q344: You have defined a destructor in a class that you have developed by using the C#, but the destructor never executed. Why?  Related To: OOP
Q345: Why doesn't C# allow static methods to implement an interface?  Related To: OOP
Q346: Explain when to use Finalize vs Dispose?  Related To: .NET Core

Q348: Implement a Queue using two Stacks CSJSJavaPY Related To: Queues, Stacks, Java, JavaScript
Q349: Filter out the first 3 even numbers from the list using LINQ  Related To: LINQ
Q350: How to check if two Strings (words) are Anagrams? CSJavaPY Related To: Strings, Data Structures, Java
Q351: Reverse the ordering of words in a String CS Related To: Strings
Q352: Explain how does the Sentinel Search work? CSPY Related To: Searching
Q353: Refactor the code  
Q354: What is the output of the program below? Explain.  
Q355: Given an array of ints, write a C# method to total all the values that are even numbers.  
Q356: Can you return multiple values from a function in C#? Provide some examples.  
Q357: Can you do Iterative Pre-order Traversal of a Binary Tree without Recursion? CSPY Related To: Binary Tree, Data Structures
Q358: Binet's formula: How to calculate Fibonacci numbers without Recursion or Iteration?  CSJSJavaPY Related To: Fibonacci Series, Data Structures, JavaScript
Q359: Find Merge (Intersection) Point of Two Linked Lists CSJavaPY Related To: Linked Lists
Q360: Explain what is Fibonacci Search technique? CSJSJavaPY Related To: Divide & Conquer, Fibonacci Series, Searching, Data Structures, JavaScript
Q361: Is the comparison of time and null in the if statement below valid or not? Why or why not?  
Q362: What is the output of the program below? Explain your answer.  
Q363: What is the output of the program below?  
Q364: What is the output of the short program below? Explain your answer.  
Q365: Is relying on && short-circuiting safe in .NET?  
Q366: Calculate the circumference of the circle

Q367: What is Inheritance?  
Q368: What is Object-Oriented Programming (OOP)?  
Q369: What is Polymorphism?  
Q370: What is Encapsulation?  
Q371: Can you inherit private members of a class?  
Q372: Explain the concept of Constructor  
Q373: What is an object?  
Q374: What is the relationship between a class and an object?  
Q375: What is the difference between a class and a structure?  
Q376: What is the difference between procedural and object-oriented programming?  
Q377: What is a class?  
Q378: Explain the basic features of OOPs  
Q379: Why is the virtual keyword used in code?  
Q380: What is the difference between Interface and Abstract Class?  Related To: C#
Q381: What is the difference between Virtual method and Abstract method?  Related To: C#
Q382: When should I use a struct instead of a class?  
Q383: What is Polymorphism, what is it for, and how is it used?  
Q384: How can you prevent a class from overriding in C#?  Related To: C#
Q385: What are abstract classes? What are the distinct characteristics of an abstract class?  
Q386: How is method overriding different from method overloading?  
Q387: State the features of an Interface  
Q388: How could you define Abstraction in OOP?  
Q389: How can you prevent your class to be inherited further?  
Q390: What do you mean by Data Encapsulation?  
Q391: Can you specify the accessibility modifier for methods inside the interface?  
Q392: Is it possible for a class to inherit the constructor of its base class?  
Q393: What are similarities between a class and a structure?  
Q394: What are the different ways a method can be Overloaded?  
Q395: Interface or an Abstract class: which one to use?  
Q396: What is Unit Of Work?  Related To: ADO.NET
Q397: What's the difference between a method and a function in OOP context?  
Q398: Explain different types of Inheritance  
Q399: What is Coupling in OOP?  
Q400: What exactly is the difference between an Interface and abstract class?  
Q401: Differentiate between an abstract class and an interface  
Q402: Explain the concept of Destructor  
Q403: When should I use an Interface and when should I use a Base Class?  
Q404: What is the difference between Cohesion and Coupling?  
Q405: Can you declare an overridden method to be static if the original method is not static?  
Q406: Does .NET support Multiple Inheritance?  Related To: .NET Core
Q407: What's the advantage of using getters and setters - that only get and set - instead of simply using public fields for those variables?  
Q408: What is a static constructor?  
Q409: What is the difference between an abstract function and a virtual function?  
Q410: What is Cohesion in OOP?  
Q411: Could you explain some benefits of Repository Pattern?  Related To: ADO.NET
Q412: How to solve Circular Reference?  Related To: C#
Q413: Can you provide a simple explanation of methods vs. functions in OOP context?  
Q414: Can you declare a private class in a namespace?  
Q415: What is the difference between Association, Aggregation and Composition?  
Q416: In terms that an OOP programmer would understand (without any functional programming background), what is a monad?  
Q417: You have defined a destructor in a class that you have developed by using the C#, but the destructor never executed. Why?  Related To: C#
Q418: What does it mean to Program to an Interface?  
Q419: Why prefer Composition over Inheritance? What trade-offs are there for each approach? When should you choose Inheritance over Composition?  
Q420: What is LSP (Liskov Substitution Principle) and what are some examples of its use (good and bad)?  
Q421: What is the difference between a Mixin and Inheritance?  
Q422: Could you elaborate Polymorphism vs Overriding vs Overloading?  
Q423: Why doesn't C# allow static methods to implement an interface?  Related To: C#
Q424: How do I test a private function or a class that has private methods, fields or inner classes?  Related To: Software Architecture, Software Testing

========================
LINQ [37]
========================
Q1: Explain what is LINQ? Why is it required?  
Q2: What are the types of LINQ?  
Q3: What is LINQ in C#?  Related To: C#
Q4: Explain what is the purpose of LINQ providers in LINQ?  
Q5: What is Anonymous function?  
Q6: List out the three main components of LINQ?  
Q7: Explain how LINQ is useful than Stored Procedures?  
Q8: What are Extension Methods?  
Q9: Explain why SELECT clause comes after FROM clause in LINQ?  
Q10: In LINQ how will you find the index of the element using where() with Lambda Expressions?  
Q11: Mention what is the role of DataContext classes in LINQ?  
Q12:  What are Anonymous Types?  
Q13: Explain what is LINQ to Objects?  
Q14: Could you explian what is the exact deference between deferred execution and Lazy evaluation in C#?  
Q15: When to use First() and when to use FirstOrDefault() with LINQ?  
Q16: Explain how standard query operators useful in LINQ?  
Q17: Define what is let clause?  
Q18: Explain what is the difference between Skip() and SkipWhile() extension method?  
Q19: What is the difference between First() and Take(1)?  
Q20: Could you compare Entity Framework vs LINQ to SQL vs ADO.NET with stored procedures?  
Q21: Explain what is Lambda Expressions in LINQ?  
Q22: What is Expression Trees and how they used in LINQ?  
Q23: Explain what are LINQ compiled queries?  
Q24: When trying to decide between using the Entity Framework and LINQ to SQL as an ORM, what's the difference?  
Q25: Explain the difference between Select and Where  Related To: C#
Q26: When should I use a CompiledQuery?  
Q27: Name some advantages of LINQ over Stored Procedures  
Q28: What is an equivalent to the let keyword in chained LINQ extension method calls?  
Q29: What are the benefits of a Deferred Execution in LINQ?  Related To: C#
Q30: Name some disadvantages of LINQ over Stored Procedures  
Q31: What is the difference between Select and SelectMany?  
Q32: Why use AsEnumerable() rather than casting to IEnumerable<T>?  
Q33: What is the difference between returning IQueryable<T> vs. IEnumerable<T>?  
Q34: Can you provide a concise distinction between anonymous method and lambda expressions?  

Q35: Filter out the first 3 even numbers from the list using LINQ  Related To: C#
Q36: Using LINQ to remove elements from a List<T>  
Q37: Get the indexes of top n items where item value = true

========================
SQL [260]
========================
Q1: What is RDBMS?
Q2: Explain DML, DDL, DCL, and TCL statements with examples?
Q3: What is the difference between Drop, Delete and Truncate statements in SQL Server?
Q4: What is the Cascading referential integrity constraint?
Q5: Explain the difference between where clause and having clause in SQL Server
Q6: What are the differences between primary key and unique key in SQL Server?
Q7: How can we copy the data from one table to another?
Q8: How to create a new table from an existing table or in how many ways we can create a new table from an existing table?
Q9: What is normalization?
Q10: What are the different normalization forms?
Q11: What is the Cursor?
Q12: What is the use of DBCC commands?
Q13: What is a Linked Server?
Q14: What is Collation?
Q15: What are the different types of Collation Sensitivity?
Q16: How to implement one-to-one, one-to-many and many-to-many relationships while designing tables?
Q17: What is a NOLOCK?
Q18: What is the use of the UPDATE_STATISTICS command?
Q19: What is sub-query? Explain the properties of sub-query.
Q20: What is the SQL Profiler?
Q21: What are the authentication modes in SQL Server? How can it be changed?
Q22: What is an SQL server agent?
Q23: What is log shipping?
Q24: What are sp_configure commands and set commands?
Q25: What are the different types of replication?
Q26: What does it mean to have quoted_identifier on?
Q27: What are the implications of having it off?
Q28: What is the STUFF function and how does it differ from the REPLACE function?
Q29: How to rebuild the Master Database?
Q30: What are the basic functions for master, msdb, model, tempdb databases?
Q31: What is De-normalization?
Q32: What is Scheduled Jobs or What is a Scheduled Tasks?
Q33: What is BCP? When does it use?
Q34: How do you load large data to the SQL server database?
Q35: Can we rewrite subqueries into simple select statements or with joins?
Q36: Can SQL Servers link to other servers like Oracle?
Q37: How to copy the tables, schema, and views from one SQL server to another? 
Q38: What is data warehousing?
Q39: What is OLTP (Online Transaction Processing)?
Q40: What is Data Integrity?
Q41: What are the different levels of data integrity in SQL Server?
Q42: What is Entity integrity?
Q43: What is Referential integrity?
Q44: What is Domain Integrity?
Q45: What is user-defined integrity?
Q46: What is a Constraint in SQL Server?
Q47: Why do we need Constraints in SQL Server?
Q48: What are the different types of Constraints available in SQL Server?
Q49: What is Default Constraint in SQL Server?
Q50: What is NOT NULL Constraint in SQL Server?
Q51: What is a Unique Constraint in SQL Server?
Q52: What is a composite constraint in SQL Server?
Q53: What is CHECK Constraint in SQL Server?
Q54: What is the Primary Key Constraint in SQL Server?
Q55: What is a Composite Primary Key in SQL Server?
Q56: What is Foreign Key Constraint in SQL Server?
Q57: How can we provide the default value for a column?
Q58: What is SELF REFERENTIAL INTEGRITY
Q59: What is the difference between a primary key and a unique key?
Q60: What is the difference between primary key and foreign key?

Q61: What are Temporary Tables in SQL Server?
Q62: Types of Temporary Tables in SQL Server.
Q63: What is a Local Temporary Table?
Q64: What are Global Temporary Tables in SQL Server?
Q65: What are the differences between Local and Global Temporary Tables?
Q66: Can you please explain when to use a temp table in SQL Server?
Q67: Can you create foreign key constraints on temporary tables?
Q68: Do you have to manually delete temporary tables?
Q69: In which database, temporary tables get created?
Q70: How can I check for the existence of a temporary table?
Q71: How to copy the structure of the temporary table from one table to another?
Q72: What is the difference between a Temporary Table and a Table variable in SQL Server? 

Q73: How is data stored in a database in SQL Server?
Q74: How will be the database engine retrieves the information from a table in SQL Server?
Q75: What is the use of an Index in SQL Server?
Q76: What is an Index in SQL Server?
Q77: Why do we need Indexes in SQL Server?
Q78: What are the types of Indexes available in SQL Server?
Q79: What is a Clustered Index in SQL Server?
Q80: What is a Non-Clustered Index in SQL Server?
Q81: What is the difference between clustered and non-clustered index?
Q82: What is a Unique Index?
Q83: What are the differences between UNIQUE Constraints and the UNIQUE Index?
Q84: When should we be creating a unique constraint over a unique index?
Q85: When SQL Server uses Indexes?
Q86: When should we create indexes on a table?
Q87: What is a Covering Query in SQL Server?
Q88: What is a table scan? Or what is the impact of table scans on performance?
Q89: What is the purpose of the query optimizer in SQL Server?
Q90: What is the first thing you will check for if the query below is performing very slowly?
Q91: What is the significance of an Index on the column used in the GROUP BY clause?
Q92: What is the role of an Index in maintaining a unique column in a table?
Q93: What are the disadvantages of an Index in SQL Server?
Q94: How many Clustered and Non-Clustered Indexes can you have per table?
Q95: Which Index is faster, Clustered or Non-Clustered Index?
Q96: When is it usually better to create a unique non-clustered index on the primary key column?
Q97: What is a Composite Index in SQL Server? or What is the advantage of using a Composite Index in SQL Server? or What is Covering Query?
Q98: What are the different index configurations a table can have?
Q99: What is a table called, if it does not have neither Cluster nor Non-cluster Index? What is it used for?
Q100: How to know which index a table is using?

Q101: What is a Trigger in SQL Server?
Q102: What are the types of Triggers available in SQL Server?
Q103: What are the special tables used by Triggers in SQL Server?
Q104: What is MAGIC TABLE in triggers?
Q105: What is the Inserted Magic Table?
Q106: What is Deleted Magic Table in SQL Server?
Q107: What is a DML Trigger in SQL Server?
Q108: How to view the updating data in a table?
Q109: What are DDL triggers in SQL Server?
Q110: What is the use of DDL triggers in SQL Server?
Q111: How to Enable, Disable and Drop Triggers in SQL Server?

Q112: What is a View in SQL Server?
Q113: What are the differences between a table and a view in SQL Server?
Q114: How many types of views are there in SQL Server?
Q115: What is a simple view or Updatable view?
Q116: What is a complex View in SQL Server?
Q117: Can we drop a table that has dependent views on it?
Q118: Can we create a view based on other views?
Q119: Can we update the views in SQL Server?
Q120: Why do we need Views in SQL Server?
Q121: What are the advantages of using views? OR when do you usually use views?
Q122: What are indexed views? Or What are materialized views?
Q123: What are the limitations of a View in SQL Server?

Q124: What is a function in SQL Server?
Q125: Types of User-Defined Functions in SQL Server
Q126: What is a scalar function in SQL Server?
Q127: What is a table-valued function?
Q128: Where can we use the Inline Table-Valued function?
Q129: What is Inline table-valued functions?
Q130: What are Multi-Statement Table-Valued Functions in SQL Server?
Q131: Differences between Inline Table-Valued functions and Multi-statement Table-Valued functions.
Q132: What are the differences between functions and procedures in SQL Server?

Q133: What is Transaction Management?
Q134: What is a Transaction?
Q135: Explain various types of SQL Server transactions modes
Q136: What is Transaction Control Language?
Q137: Why we need Transaction Control Language?
Q138: What has distributed transactions in SQL Server? When are they used?
Q139: What is a nested transaction?
Q140: When to Use Transactions?
Q141: How to implement transactions in SQL Server?
Q142: What are the properties of a transaction?

Q143: Why we need Exception Handling in SQL Server?
Q144: What is Exception Handling?
Q145: Error handling in SQL Server 2005 and later versions
Q146: How to handle errors in SQL Server?
Q147: What is ERROR_MESSAGE()?
Q148: How to raise errors explicitly in a program?
Q149: What is the difference between the RAISERROR function and throw statement?
Q150: What is @@ERROR?
Q151: How to get @@error and @@rowcount at the same time?

Q152: What is a SubProgram in SQL Server?
Q153: What is a stored procedure or procedure in SQL Server?
Q154: Why we need the stored procedure?
Q155: What is the output parameter?
Q156: What are the stored procedure status variables?
Q157: Disadvantages of Return status value.
Q158: What are the advantages of using a stored procedure in SQL Server?
Q159: What is an execution plan?
Q160: When would you use it?
Q161: How would you view the execution plan?
Q162: How to view the text of the stored procedure?
Q163: How to encrypt the text of a stored procedure?
Q164: What are the different procedure attributes in SQL Server?
Q165: What is the temporary stored procedure?
Q166: What are Private / Local Temporary Stored Procedure?
Q167: What is the Public / Global Temporary Stored Procedure?
Q168: What is the use of a Temporary Stored Procedure?
Q169: What is deferred name resolution in SQL Server?
Q170: Can a stored procedure call itself or recursive stored procedure? How many level SP nesting possible?

Q171: What are Joins in SQL Server?
Q172: Explain the different types of Joins in SQL Server.
Q173: What are ANSI and NON-ANSI Joins in SQL Server?
Q174: Explain about EQUI Join in SQL Server
Q175: Explain about INNER JOIN in SQL Server
Q176: Explain about OUTER JOIN in SQL Server
Q177: What is the left outer join?
Q178: What is the right outer join?
Q179: What is the full outer join?
Q180: Explain about CROSS join in SQL Server
Q181: What is self-join in SQL Server?
Q182: Differences between UNION and UNION ALL in SQL Server
Q183: Difference between JOIN and UNION in SQL Server
Q184: What is a cross join? Explain with an example?
Q185: What is inner Join in SQL Server? Explain with an example?
Q186: What is the Left Outer Join in SQL Server? Explain with an example?
Q187: What is the Right Outer Join in SQL Server? Explain with an example?
Q188: What is Full Outer Join in SQL Server? Explain with an example?

Q189: Write a query to fetch the EmpFname from the EmployeeInfo table in upper case and use the ALIAS name as EmpName.
Q190: Write a query to fetch the number of employees working in the department ‘HR’.
Q191: Write a query to get the current date.
Q192: Write a query to retrieve the first four characters of  EmpLname from the EmployeeInfo table.
Q193: Write a query to fetch only the place name(string before brackets) from the Address column of EmployeeInfo table.
Q194: Write a query to create a new table which consists of data and structure copied from the other table.
Q195: Write q query to find all the employees whose salary is between 50000 to 100000.
Q196: Write a query to find the names of employees that begin with ‘S’
Q197: Write a query to fetch top N records.
Q198: Write a query to retrieve the EmpFname and EmpLname in a single column as “FullName”. The first name and the last name must be separated with space.
Q199: Write a query find number of employees whose DOB is between 02/05/1970 to 31/12/1975 and are grouped according to gender
Q200: Write a query to fetch all the records from the EmployeeInfo table ordered by EmpLname in descending order and Department in the ascending order.
Q201: Write a query to fetch details of employees whose EmpLname ends with an alphabet ‘A’ and contains five alphabets.
Q202: Write a query to fetch details of all employees excluding the employees with first names, “Sanjay” and “Sonia” from the EmployeeInfo table.
Q203: Write a query to fetch details of employees with the address as “DELHI(DEL)”.
Q204: Write a query to fetch all employees who also hold the managerial position.
Q205: Write a query to fetch the department-wise count of employees sorted by department’s count in ascending order.
Q206: Write a query to calculate the even and odd records from a table.
Q207: Write a SQL query to retrieve employee details from EmployeeInfo table who have a date of joining in the EmployeePosition table.
Q208: Write a query to retrieve two minimum and maximum salaries from the EmployeePosition table.
Q209: Write a query to find the Nth highest salary from the table without using TOP/limit keyword.
Q210: Write a query to retrieve duplicate records from a table.
Q211: Write a query to retrieve the list of employees working in the same department.
Q212: Write a query to retrieve the last 3 records from the EmployeeInfo table.
Q213: Write a query to find the third-highest salary from the EmpPosition table.
Q214: Write a query to display the first and the last record from the EmployeeInfo table.
Q215: Write a query to add email validation to your database
Q216: Write a query to retrieve Departments who have less than 2 employees working in it.
Q217: Write a query to retrieve EmpPostion along with total salaries paid for each of them.
Q218: Write a query to fetch 50% records from the EmployeeInfo table.

Q219: What is a VIEW?  
Q220: Define a Temp Table   
Q221: What is PRIMARY KEY?  
Q222: What is DEFAULT?  
Q223: What is FOREIGN KEY?  
Q224: What is Normalisation?  Related To: Databases
Q225: What is the difference between TRUNCATE and DELETE?  Related To: MySQL
Q226: What is the difference between Data Definition Language (DDL) and Data Manipulation Language (DML)?  Related To: MySQL, T-SQL, Databases
Q227: What is the difference between JOIN and UNION?  
Q228: Discuss INNER JOIN ON vs WHERE clause (with multiple FROM tables)  
Q229: Describe the difference between truncate and delete   
Q230: What is the difference between INNER JOIN, OUTER JOIN, FULL OUTER JOIN?  
Q231: What is the difference between UNION and UNION ALL?   
Q232: Define ACID Properties  Related To: Databases
Q233: How a database index can help performance?  Related To: Databases
Q234: What is Denormalization?  Related To: Databases
Q235: What is the difference between WHERE clause and HAVING clause?  
Q236: What are the difference between Clustered and a Non-clustered index?  Related To: Databases
Q237: How does a Hash index work?  
Q238: What is the difference between INNER JOIN and OUTER JOIN?  
Q239: What is Collation?  
Q240: What's the difference between a Primary Key and a Unique Key?  Related To: Databases
Q241: How can VIEW be used to provide security layer for your app?  Related To: MySQL
Q242: What is the cost of having a database index?  Related To: Databases
Q243: Explain the difference between Exclusive Lock and Update Lock  Related To: Databases
Q244: How does B-trees Index work?  Related To: Databases
Q245: What is the difference among UNION, MINUS and INTERSECT?  
Q246: What is faster, one big query or many small queries?  Related To: MySQL
Q247: What are some other types of Indexes (vs B-Trees)?  Related To: Databases
Q248: Name some disadvantages of a Hash index  Related To: Databases
Q249: What is Optimistic Locking and Pessimistic Locking?  Related To: Databases
Q250: How does database Indexing work?  Related To: Databases
Q251: What is the difference between B-Tree, R-Tree and Hash indexing?  Related To: Databases

Q252: Find duplicate values in a SQL table  Related To: MySQL
Q253: How to select first 5 records from a table?  
Q254: How to generate row number in SQL without ROWNUM  
Q255: How can I do an UPDATE statement with JOIN in SQL?  
Q256: How can we transpose a table using SQL (changing rows to column or vice-versa)?  
Q257: How does TRUNCATE and DELETE operations effect Identity?  Related To: T-SQL
Q258: Delete duplicate values in a SQL table  
Q259: What would happen without an Index?  
Q260: Select first row in each GROUP BY group (greatest-n-per-group problem)? 

==================================
Entity Framework [55]
==================================
Q1: What are the benefits of using EF?  
Q2: What is Entity Framework?  
Q3: What is Storage Model?  
Q4: What are scalar and navigation properties in Entity Framework?  
Q5: What is migration in Entity Framework?  
Q6: What is the purpose of a DBContext class?  
Q7: Mention in what all scenarios Entity Framework can be applicable?  
Q8: What is Conceptual Model?  
Q9: What is Mapping?  
Q10: What is pluralize and singularize in the Entity Framework?  
Q11: Mention what is Code First Approach and Model First Approach in Entity Framework?  
Q12: What is Code First approach in Entity Framework?  
Q13: Explain Lazy Loading, Eager Loading, and Explicit Loading?  
Q14: What are the advantages of Model First Approach?  
Q15: What is Eager Loading?  
Q16: What are the advantages/disadvantages of Code First Approach?  
Q17: Explain how you can load related entities in EF?  
Q18: What are the components of Entity Framework Architecture?  
Q19: What is the role of Entity Client Data Provider?  
Q20: What is the importance of EDMX file in Entity Framework?  
Q21: How can we handle concurrency in Entity Framework?  
Q22: What are POCO classes in Entity Framework?  
Q23: Could you explain the difference between Optimistic vs Pessimistic locking?  
Q24: What is Optimistic Locking?  Related To: Databases
Q25: What are complex types in Entity Framework?  
Q26: What are the different approaches supported in the Entity Framework to create Entity Model?  
Q27: What is EF Data Access Architecture?  
Q28: Can you explain Lazy Loading in a detailed manner?  
Q29: What are the advantages and disadvantages of Database First Approach?  
Q30: What is the difference between ObjectContext and DbContext?  
Q31: What is faster - ADO.NET or ADO.NET Entity Framework?  
Q32: What is the difference between POCO, Code First, and simple EF approach?  
Q33: Could you explain Pessimistic locking?  
Q34: What’s the difference between LINQ to SQL and Entity Framework?  
Q35: What is the difference between Code First, Model First and Database First?  
Q36: What are the disadvantages of using static DbContext?  
Q37: Which type of loading is good in which scenario?  
Q38: Can you explain CSDL, SSDL and MSL sections in an EDMX file?  
Q39: What are T4 templates?  
Q40: Is DbContext thread safe?  
Q41: How can you enhance the performance of Entity Framework?  
Q42: When would you use EF6 vs EF Core?  
Q43: Name some differences between Express vs Recoverable messages  
Q44: What types of system generated messages do you know?  
Q45: When would you use SaveChanges(false) + AcceptAllChanges()?  
Q46: How can we do pessimistic locking in Entity Framework?  
Q47: What is the difference between Automatic Migration vs Code-base Migration?  
Q48: What are the advantages and disadvantages of creating a Global Entities Context for the application (i.e. one static instance)?  
Q49: Can I use Entity Framework 6 in .Net Core?  
Q50: What's the difference between .SaveChanges() and .AcceptAllChanges()?  
Q51: What is client wins and store wins mode in Entity Framework concurrency?  
Q52: What difference does .AsNoTracking() make?  

Q53: What are the different ways of creating these domain/entity objects?  
Q54: How do I delete multiple rows in Entity Framework (without foreach)?  
Q55: How do I view the SQL generated by the Entity Framework?

==================
ASP.NET MVC [132]
==================
Q1 Explain MVC (Model-View-Controller) in general?
Q2 What is ASP.NET MVC?
Q3 What are Model, View, and Controller from ASP.NET MVC Point of view?
Q4 Explain the advantages of ASP.NET MVC?
Q5 What is the difference between 3-layer architecture and MVC architecture?
Q6 What are the differences between ASP.NET MVC and ASP.NET WebForms? Is ASP.NET MVC going to replace ASP.NET WebForms?
Q7 Can you please explain the request flow in the ASP.NET MVC framework?
Q8 What are the important namespaces used in ASP.NET MVC?
Q9 What is View Model in ASP.NET MVC?
Q10. What are Action methods in ASP.NET MVC?
Q11. What is ActionResult and how is it different from others?
Q12. How to make a Non-Action method in ASP.NET MVC?
Q13. How you can change the action method name in ASP.NET MVC?
Q14. How to restrict an action method to be invoked only by HTTP GET, POST, PUT or DELETE?
Q15. How to determine an action method is invoked by HTTP GET or POST?
Q16. How to determine an AJAX request?
Q17. What is Child action and how to invoke it?
Q18. What are Partial Views in ASP.NET MVC and it’s needed?
Q19. What are the Layouts in ASP.NET MVC
Q20. What are Sections in ASP.NET MVC?
Q21. What are RenderBody and RenderPage in ASP.NET MVC?
Q22. What are the Styles.Render and Scripts.Render?
Q23. How to enable and disable optimizations in ASP.NET MVC?
Q24. What is _ViewStart?
Q25. What are the different ways of rendering layout in ASP.NET MVC?
Q26. What is the App_Start folder in ASP.NET MVC?
Q27. What are the different ways of returning/rendering a view in ASP.NET MVC?
Q28. What is Area in ASP.NET MVC and How to register Area in ASP.NET MVC?
Q29. What is Scaffolding?
Q30. What are the differences between ViewData, ViewBag, TempData, and Session?
Q31. How to control Session behavior in ASP.NET MVC?
Q32. How is TempData related to Session in ASP.NET MVC?
Q33. What is a View Engine in ASP.NET MVC application?
Q34. How does the View Engine work in the ASP.NET MVC application?   
Q35. What is the Razor View Engine and How to register Custom View Engine in ASP.NET MVC?
Q36. Can you remove the default View Engine in ASP.NET MVC?
Q37. What is the difference between the Razor and WebForm engine?
Q38. What are HTML Helpers in ASP.NET MVC?
Q39. Is it mandatory to use HTML helpers?
Q40. What is the difference between Html.TextBox and Html.TextBoxFor?
Q41. What is the Validation Summary in the ASP.NET MVC Application?
Q42. What is unobtrusive AJAX?
Q43. What is Cross-Domain AJAX?
Q44. What is caching?
Q45. When to use Caching in ASP.NET MVC Application?
Q46. What are the advantages of caching in ASP.NET MVC Application?   
Q47. What is the Output Caching in ASP.NET MVC?
Q48. How to allow users to submit HTML tags in ASP.NET MVC
Q49. What is loose coupling and how is it possible in MVC Design Pattern?
Q50. What is Test-Driven Development (TDD) and what are the commonly used tool for Unit Testing in ASP.NET MVC?

Q61. What is Routing in ASP.NET MVC?
Q62. How you can define a route in ASP.NET MVC?
Q63. What is Attribute Routing and how to define it in ASP.NET MVC?
Q64. When to use Attribute Routing in ASP.NET MVC Application?
Q65. How to enable Attribute Routing in ASP.NET MVC?
Q66. Can we combine both attribute routing and convention-based routing in a single application?
Q67. What are Route Constraints in ASP.NET MVC?
Q68. What is the difference between Routing and URL Rewriting?
Q69. How is the routing table created in ASP.NET MVC?
Q70. What is the use of the RoutePrefix attribute?
Q71. How to override the route prefix? 
Q72. What are Data Annotations in ASP.NET MVC?     
Q73. Built-in Data Annotation Validator Attributes in ASP.NET MVC
Q74. How to apply Server-side validation in ASP.NET MVC?
Q75. How to determine there is no error in Model State?
Q76. How to enable and disable client-side validation in ASP.NET MVC?
Q77. What is a CDN and what are the advantages of using CDN?
Q78. What is the jQuery Validation Unobtrusive plugin?
Q79. What is Bundling and Minification in ASP.NET MVC?
Q80. Can we use Bundling and Minification in ASP.NET MVC3 or ASP.NET MVC4?
Q81. How Bundling uses browser Cache capability?
Q82. What are ASP.NET MVC Filters? Name a few action filters in ASP.NET MVC?
Q83. What are the different types of Filters in ASP.NET MVC?
Q84. Authentication Filters in ASP.NET MVC
Q85. Authorization Filters in ASP.NET MVC
Q86. Action Filters in ASP.NET MVC
Q87. Result Filters in ASP.NET MVC
Q88. Exception Filters in ASP.NET MVC
Q89. What is Custom Action Filter in ASP.NET MVC?
Q80. What is the order of execution of filters in ASP.NET MVC?
Q91. How to Configure Filters in ASP.NET MVC?
Q92. What is the Use of Authorize Action Filter in ASP.NET MVC?
Q93. What is the Use of the ChildActionOnly action filter?
Q94. What is the need for HandleErrorAttribute in MVC?
Q95. We did not apply the HandleError attribute anywhere. So how did all this work?
Q96. What is the use of RequireHttps in MVC?

Q97: What is Layout in MVC?  
Q98: What is ASP.NET MVC?  
Q99: What is Razor Pages?  
Q100: What is the use of ViewModel in MVC?  
Q101: Can you explain Model, Controller and View in MVC?  
Q102: What are Scaffold templates in MVC?  
Q103: Explain Sections is MVC?  
Q104: What are the advantages of MVC over ASP.NET?  
Q105: Explain Bundle.Config in MVC?  
Q106: What is Razor View Engine?  
Q107: What are Actions in MVC?  
Q108: What are NonAction methods in MVC?  
Q109: What you mean by Routing in MVC?  
Q110: Can a view be shared across multiple controllers? If Yes, How we can do that?  
Q111: Can you explain the page life cycle of MVC?  
Q112: What are HTML Helpers in MVC?  
Q113: Explain ASP.NET WebAPI vs MVC  
Q114: What is PartialView in MVC?  
Q115: Explain the methods used to render the views in MVC?  
Q116: Can you explain RenderBody and RenderPage in MVC?  
Q117: What is the difference between ViewBag and ViewData in MVC?  
Q118: What is Attribute Routing in MVC?  
Q119: What is the HelperPage.IsAjax Property?  
Q120: What is the difference between ViewResult() and ActionResult() in ASP.NET MVC?  
Q121: What are some of the advantages of using ASP.NET MVC vs Web Forms?  
Q122: Explain the difference between MVC vs ASP.NET Web API  Related To: ASP.NET Web API
Q123: What about MVC in .NET Core?  Related To: .NET Core
Q124: Is it possible to create web application with both WebForms and MVC?  Related To: ASP.NET
Q125: How route table has been created in ASP.NET MVC?  
Q126: What is the difference between ViewData and TempData?  
Q127: What are Validation Annotations?  
Q128: What is Separation of Concerns in ASP.NET MVC?  
Q129: What are AJAX Helpers in MVC?  
Q130: Explain Dependency Resolution in MVC?  
Q131: Why to use Html.Partial in MVC?  
Q132: What is the difference between Html.Partial vs Html.RenderPartial & Html.Action vs Html.RenderAction?  

==================
ASP.NET Web API [79]
==================
Q1. What is ASP.NET Web API?
Q2. What is the Rest?
Q3. What is Not Rest?
Q4. What are the RESTful services?
Q5. What are the differences between REST and SOAP?
Q6. What are the Differences between WCF and Web API? When to choose one over the other?
Q7. When do we need to choose ASP.NET Web API?
Q8. What is the difference between WCF and WEB API and WCF REST and Web Service?
Q9. What are the advantages of using REST in ASP.NET Web API?
Q10. What are the Differences between WCF Rest and Web API?
Q11. What are the advantages of using ASP.NET Web API?
Q12. What new features are introduced in ASP.NET Web API 2.0?
Q13. What are the differences between ASP.NET MVC and ASP.NET Web API?
Q14. Is it true that ASP.NET Web API has replaced WCF?
Q15. Explain Media Formatters in Web API 2
Q16. How to return JSON from Web API Service irrespective of the Accept header value?
Q17. How to return XML data from Web API Service irrespective of the Accept header value?
Q18. How to return JSON instead of XML from Web API Service when a request is made from the browser?

Q19. Why do we need Web API to develop RESTful services as we can also develop RESTful services using WCF?
Q20. What are the important return types supported in ASP.NET Web API?
Q21. Which .NET framework supports Web API?
Q22. Which protocol ASP.NET Web API supports?
Q23. ASP.NET Web API uses which open-source library for JSON serialization?
Q24. By default, Web API sends an HTTP response with which status code for an uncaught exception?
Q25. How do you construct HtmlResponseMessage in ASP.NET Web API?
Q26. What is Routing in ASP.NET Web API?
Q27. How the Web API Framework handle an incoming HTTP Request?
Q28. What is SOAP?
Q29. How Can we assign an alias name for ASP.NET Web API Action?
Q30. What is Content Negotiation in Web API?
Q31. What is CORS?
Q32. What is Web API Attribute Routing?
Q33. Why do we need Attribute Routing in Web API?
Q34. What is Authentication and Authorization in Web API?
Q35. What is an HTTP Message handler in ASP.NET Web API Application?
Q36. Why Web API versioning is required?
Q37. What are the Different options available in Web API to maintain the versioning?
Q38. What are Request Verbs or HTTP Verbs?
Q39. What do you mean by Parameter Binding in Web API?
Q40. What is the use of Authorize Attribute?
Q41. How to Enable CORS in Web API?
Q42. What is Basic HTTP Authentication?
Q43. What is ASP.Net identity?
Q44. What is Token Based Authentication in Web API?
Q45. How does the Token-Based Authentication work?
Q46. What is a Refresh Token? Why we need Refresh Token in Web API?
Q47. What is HMAC Authentication? Why do we need HMAC Authentication in Web API?

Q48. What is ASP.NET Web API?  
Q49. Explain the usage of HttpResponseMessage?  
Q50. What New Features are Introduced in ASP.NET Web API 2.0?  
Q51. Which status code used for all uncaught exceptions by default?  
Q52. What are the Advantages of Using ASP.NET Web API?  
Q53. What are main return types supported in Web API?  
Q54. What is the difference between ApiController and Controller?  
Q55. What exactly is OAuth (Open Authorization)?  
Q56. Name types of Action Results in Web API 2  
Q57. Compare WCF vs ASP.NET Web API?  Related To: WCF
Q58. Explain the difference between MVC vs ASP.NET Web API  Related To: ASP.NET MVC
Q59. What are the differences between Web API and Web API 2?  
Q60. Explain the difference between WCF RESTful Service vs ASP.NET Web API?  
Q61. What is Attribute Routing in ASP.NET Web API 2.0?  
Q62. Is it True that ASP.NET Web API has Replaced WCF?  Related To: WCF
Q63. Explain briefly CORS (Cross-Origin Resource Sharing)?  Related To: Web Security
Q64. Can we use Web API with ASP.NET Web Form?  
Q65. How to Return View from ASP.NET Web API Method?  
Q66. How to register exception filter globally?  
Q67. What is Delegating Handler?  
Q68. What is ASP.NET Web API OData?  
Q69. Why are the FromBody and FromUri attributes needed in ASP.NET Web API?  
Q70. What's the difference between OpenID and OAuth?  Related To: Web Security
Q71. Why should I use IHttpActionResult instead of HttpResponseMessage?  
Q72. Explain the difference between WCF, Web API, WCF REST and Web Service?  Related To: API Design, REST & RESTful
Q73. Could you clarify what is the best practice with Web API error management?  
Q74. Explain advantages/disadvantages of using HttpModule vs DelegatingHandler?  
Q75. Explain briefly OWIN (Open Web Interface for .NET) Self Hosting?  
Q76. What is difference between WCF and Web API and WCF REST and Web Service?  

Q78. How to restrict access to Web API method to specific HTTP verb?  
Q79. How can we provide an alias name for ASP.NET Web API Action?  

==================
Typescript [39]
==================
Q1: What is TypeScript and why one should use it?  
Q2: List the built-in types in Typescript  
Q3: Explain generics in TypeScript  
Q4: What are Modules in Typescript?  
Q5: What is TypeScript and why would I use it in place of JavaScript?  
Q6: Do we need to compile TypeScript files and why?  
Q7: What are the benefits of TypeScript?  
Q8: How to call base class constructor from child class in TypeScript?  
Q9: What is TypeScript and why do we need it?  
Q10: What is the difference between Classes and Interfaces in Typescript?  
Q11: What is Interface in TypeScript?  
Q12: What is Decorators in TypeScript?  
Q13: What are the difference beetween Typescript and JavaScript?  
Q14: When to use interfaces and when to use classes in TypeScript?  
Q15: How to implement class constants in TypeScript?  
Q16: How could you check null and undefined in TypeScript?  
Q17: Does TypeScript support all object oriented principles?  
Q18: Which object oriented terms are supported by TypeScript?  
Q19: What is getters/setters in TypeScript?  
Q20: Could we use TypeScript on backend and how?  
Q21: What is a TypeScript Map file?  
Q22: Explain how and why we could use property decorators in TS?  
Q23: What is Typings in Typescript?  
Q24: Is that TypeScript code valid? Explain why.  
Q25: How can you allow classes defined in a module to be accessible outside of the module?  
Q26: How TypeScript is optionally statically typed language?  
Q27: What is the default access modifier for members of a class in TypeScript?  
Q28: What are different components of TypeScript?  
Q29: How to use external plain JavaScript libraries in TypeScript?  
Q30: Does TypeScript supports function overloading?  
Q31: What is the difference between interface vs type statements?  
Q32: What is one thing you would change about TypeScript?  
Q33: Explain when to use declare keyword in TypeScript  
Q34: Is it possible to generate TypeScript declaration files from JS library?  
Q35: What are Ambients in TypeScripts and when to use them?  

Q36: What's wrong with that code?  
Q37: Are strongly-typed functions as parameters possible in TypeScript?  
Q38: Explain why that code is marked as WRONG?  
Q39: How would you overload a class constructor in TypeScript?  

===============
Angular [112]
===============
Q1: What is Routing Guard in Angular?  
Q2: What is a Module, and what does it contain?  
Q3: What's the difference between an Angular Component and Module?  
Q4: What is the minimum definition of a Component?  
Q5: What is a Component? Why would you use it?  
Q6: What is a Service, and when will you use it?  
Q7: What are the differences between AngularJS (angular 1.x) and Angular (Angular 2.x and beyond)?  
Q8: What is the equivalent of ngShow and ngHide in Angular?  
Q9: What is the difference between @Component and @Directive in Angular?   
Q10: You have an HTML response I want to display. How do I do that?   
Q11: What is the difference between *ngIf vs [hidden]?  
Q12: How would you run unit test?  
Q13: How would you protect a component being activated through the router?  
Q14: What are Observables?  
Q15: What is Interpolation?  
Q16: What is an Observer?  
Q17: What is the difference between Structural and Attribute directives in Angular?  
Q18: What is a bootstrapping module?  
Q19: What is the purpose of base href tag?  
Q20: What is an Observable?  
Q21: Explain the difference between Constructor and ngOnInit  
Q22: What is the difference between @Component and @Directive in Angular?  
Q23:  Explain the difference between Promise and Observable in Angular?  
Q24: Why should ngOnInit be used, if we already have a constructor?  
Q25: What is difference between declarations, providers and import in NgModule?  
Q26: Can you explain the difference between Promise and Observable in Angular? In what scenario can we use each case?  
Q27: What's new in Angular 6 and why shall we upgrade to it?  
Q28: What is Redux and how does it relate to an Angular app?  
Q29: What is the use of Codelyzer?  
Q30: What is TestBed?  
Q31: What is AOT?  
Q32: Why would you use a spy in a test?  
Q33: When would you use eager module loading?  
Q34: What is Protractor?  
Q35: How to inject base href?  
Q36: What is Router Outlet?  
Q37: What are the ways to control AOT compilation?  
Q38: Do I always need a Routing Module?  
Q39: What are the utility functions provided by RxJS?  
Q40: What is Multicasting?  
Q41: How do you categorize data binding types?  
Q42: What is a Parameterized pipe?  
Q43: Explain how Custom Elements works internally?  
Q44: What is Activated route?  
Q45: What is the purpose of Wildcard route?  
Q46: What is Router State?  
Q47: What are Custom elements?  
Q48: What is the difference between promise and observable?  
Q49: What happens if you use <script> tag inside template?  
Q50: What is Subscribing?  
Q51: What are dynamic components?  
Q52: Why Incremental DOM has low memory footprint?  
Q53: What is Angular Universal?  
Q54: How do you perform error handling in Observables?  
Q55: How do you perform Error Handling for HttpClient?  
Q56: What is the option to choose between Inline and External template file?  
Q57: What is Angular Ivy?  
Q58: What is Bazel?  
Q59: Explain Lazy Loading in Angular?  
Q60: What are the lifecycle hooks for components and directives?  
Q61: What is the need for SystemJS in Angular?  
Q62: How to detect a route change in Angular?  
Q63: Are there any pros/cons (especially performance-wise) in using local storage to replace cookie functionality?  
Q64: What is Zone in Angular?  
Q65: How do you create application to use scss?  
Q66: Name and explain some Angular Module Loading examples  
Q67: Why would you use lazy loading modules in Angular app?  
Q68: What does detectChanges do in Angular Jasmine tests?  
Q69: Why would you use renderer methods instead of using native element methods?  
Q70: What is ngUpgrage?   
Q71: What would be a good use for NgZone service?  
Q72: What does a just-in-time (JIT) compiler do (in general)?  
Q73: How would you insert an embedded view from a prepared TemplateRef?  
Q74: When does a lazy loaded module is loaded?  
Q75: What is Reactive Programming and how does it relate to Angular?  
Q76: Name some security best practices in Angular  
Q77: What is the difference between pure and impure pipe?  
Q78: What are the mapping rules between Angular component and custom element?  
Q79: What is Ivy Renderer?  
Q80: Do I need to bootstrap custom elements?  
Q81: What is Incremental DOM? How is it different from Virtual DOM?  
Q82: What are the advantages with AOT?  
Q83: Why do we need compilation process in Angular?  
Q84: Why we should use Bazel for Angular builds?  
Q85: Explain the purpose of Service Workers in Angular  
Q86: Angular 9: What are some new features in Angular 9?  
Q87: What is difference between Incremental DOM and Virtual DOM?  Related To: React
Q88: Is there no equivalent to $scope.emit() or $scope.broadcast() in Angular?  
Q89: What is the difference between BehaviorSubject vs Observable?  
Q90: Name some differences between SystemJS vs webpack?  Related To: Webpack
Q91: Could you provide some particular examples of using ngZone?  
Q92: How would you extract webpack config from angular cli project?  
Q93: Why Angular uses Url segment?  
Q94: Do you know how you can run AngularJS and Angular side by side?  
Q95: When to use query parameters versus matrix parameters in Url?  
Q96: Just-in-Time (JIT) vs Ahead-of-Time (AOT) compilation. Explain the difference.  
Q97: Why Incremental DOM is Tree Shakable?  
Q98: Why did the Google team go with incremental DOM instead of virtual DOM?  
Q99: What are observable creation functions?  
Q100: What is Locality principle for Ivy?  
Q101: How Would You Compare View Engine vs Ivy?  
Q102: Angular 8: What are some changes in Location module?  
Q103: Angular 9: Explain improvements in Tree-Shaking  
Q104: How does Ivy affect the (Re)build time?  

Q105: What are Pipes? Give me an example.  
Q106: How can I select an element in a component template?  
Q107: What does this line do?  
Q108: How to bundle an Angular app for production?  
Q109: How would you control size of an element on resize of the window in a component?  
Q110: Could I use jQuery with Angular?  
Q111: How to set headers for every request in Angular?  
Q112: What is the Angular equivalent to an AngularJS $watch?  

============================
Design Patterns [46]
============================
Q1: What is Design Patterns and why anyone should use them?  
Q2: What are the main categories of Design Patterns?  
Q3: What is a pattern?  
Q4: What is Singleton pattern?  
Q5: What is Dependency Injection?  
Q6: What is Inversion of Control?  
Q7: Can we create a clone of a singleton object?  
Q8: What is Factory pattern?  
Q9: Name types of Design Patterns?  
Q10: What is Builder pattern?  
Q11: What is Filter pattern?  
Q12: What is Strategy pattern?  
Q13: What is Template pattern?  
Q14: What is Null Object pattern?  
Q15: What is State pattern?  
Q16: What is Iterator pattern?  
Q17: What is Proxy pattern?  
Q18: What is Abstract Factory pattern?  
Q19: What is Adapter Pattern?  
Q20: What is Bridge pattern?  
Q21: What does program to interfaces, not implementations mean?  Related To: Software Architecture
Q22: What is Decorator pattern?  
Q23: What is Prototype pattern?  
Q24: What is Facade pattern?  
Q25: Can you give any good explanation what is the difference between Proxy and Decorator?  
Q26: What are the difference between a Static class and a Singleton class?  
Q27: When should I use Composite design pattern?  
Q28: What is Mediator pattern?  
Q29: What is Observer pattern?  
Q30: What is Interpreter pattern?  
Q31: What is the Chain of Responsibility pattern?  
Q32: What is Memento pattern?  
Q33: What is Command pattern?  
Q34: What is Flyweight pattern?  
Q35: When would you use the Builder Pattern? Why not just use a Factory Pattern?  
Q36: How is Bridge pattern is different from Adapter pattern?  
Q37: Why would I ever use a Chain of Responsibility over a Decorator?  
Q38: What is the difference between Strategy design pattern and State design pattern?  
Q39: Explain usage of Service Locator Pattern  
Q40: Explain what is Composition over Inheritance?  
Q41: What are best practices for Unit Testing methods that use cache heavily?  Related To: Software Testing, Layering & Middleware
Q42: Explain difference between the Facade, Proxy, Adapter and Decorator design patterns?  
Q43: What's the difference between the Dependency Injection and Service Locator patterns?  
Q44: Could you explain the difference between Façade vs. Mediator?  
Q45: What is the difference between the Template patterns and the Strategy pattern?  
Q46: Could you explain what is the Deadly Diamond of Death?  

============================
GIT [36]
============================
Q1: What is Git?  
Q2: What is the command to write a commit message in Git?  
Q3: What is difference between Git vs SVN?  
Q4: What's the difference between a pull request and a branch?  
Q5: What is the difference between git pull and git fetch?  
Q6: How does the Centralized Workflow work?  
Q7: What is Git fork? What is difference between fork, branch and clone?  
Q8: Explain the advantages of Forking Workflow  
Q9: When should I use git stash?  
Q10: Tell me the difference between HEAD, working tree and index, in Git?  
Q11: How to revert previous commit in git?  
Q12: What is git cherry-pick?  
Q13: Could you explain the Gitflow workflow?  
Q14: What is a "bare git" repository?  
Q15: What is difference between git stash pop and git stash apply?  
Q16: What is the HEAD in Git?  
Q17: Can you explain what git reset does in plain English?  
Q18: When would you use git clone over git clone --mirror?  
Q19: How do you make an existing repository bare?  
Q20: What is the difference between git clone, git clone --bare and git clone --mirror?  
Q21: When would you use git clone over git clone --bare?  
Q22: When would you use git clone --bare over git clone --mirror?  
Q23: When do you use git rebase instead of git merge?  
Q24: Do you know how to easily undo a git rebase?   
Q25: What are "git hooks"?  
Q26: What are the type of git hooks?  
Q27: How can you use git bisect to determine the source of a (regression) bug?  
Q28: What is git bisect? How can you use it to determine the source of a (regression) bug?  

Q29: You need to update your local repos. What git commands will you use?  
Q30: How to undo the most recent commits in Git?  
Q31: You need to rollback to a previous commit and don't care about recent changes. What commands should you use?  
Q32: Write down a sequence of git commands for a "Rebase Workflow"  
Q33: How to remove a file from git without removing it from your file system?  
Q34: How to amend older Git commit?  
Q35: Write down a git command to check difference between two commits  
Q36: What git command do you need to use to know who changed certain lines in a specific file?  

==============================
Agile & Scrum [47]
==============================
Q1: What is Sprint in Scrum?  
Q2: What is User Stories?  
Q3: What is Scrum?  
Q4: What is an Agile iteration?  
Q5: Name roles in Scrum  
Q6: What is an Epic, User Stories and Task?  
Q7: Explain what is Refactoring?  
Q8: What is Agile?  
Q9: How is Agile different from other software delivery aproaches?  
Q10: Name some types of meetings or ceremonies in Scrum  
Q11: Have you ever used Scrum Task Board?  
Q12: What is Sprint Planning?  
Q13: Explain difference between a Product and a Sprint Backlog  
Q14: Mention the key difference between sprint backlog and product backlog?  
Q15: Mention what should a burndown chart should highlight?  
Q16: Explain what are Burn-Up and Burn-Down chart?  
Q17: Explain what is Velocity in Agile?  
Q18: What is Test Driven Development?  Related To: Software Architecture
Q19: Explain what does it mean by product roadmap?  
Q20: If a timebox plan needs to be reprioritized who should re-prioritise it?  
Q21: What is Story Points/Efforts/Scales?  
Q22: What are some methodologies used to implement Agile?  
Q23: What is the Agile Manifesto?  
Q24: What are four Agile Manifesto values?  
Q25: What does project Velocity mean?  
Q26: What is a Sprint Review?  
Q27: Can you explain the purpose of a Burndown Chart?  
Q28: What does the Scrum Framework consist from?  
Q29: What is Acceptance Criteria?  
Q30: Mention what are the advantages of maintaining consistent iteration length throughout the project?  
Q31: Mention what are the challenges involved in Agile software development?  
Q32: Explain the difference between Extreme Programming and Scrum?  
Q33: Mention in detail what are the role’s of Scrum Master?  
Q34: Name the 12 Agile Principles  
Q35: What the Scrum theory is based on?  
Q36: What is Scrum Increment?  
Q37: Explain main differences between Scrum and Agile?  
Q38: What are the Scrum Values?  
Q39: What is a Sprint Retrospective?  
Q40: Why Continuous Integration is important for Agile?  Related To: DevOps
Q41: In Agile mention what is the difference between the Incremental and Iterative development?  
Q42: Mention what are the Agile quality strategies?  
Q43: When not to use Agile?  
Q44: What is the Scrum's definition of Done?  
Q45: What are the benefits of Burn Up Chart?  
Q46: Explain what is Spike and Zero Sprint in Agile? What is the purpose of it?  

Q47: Provide some examples of burn-up chart  

==========================
DevOps [44]
==========================
Q1: Are you more Dev or Ops?  
Q2: Explain what is DevOps ?  
Q3: What is the most important thing DevOps helps us achieve?  
Q4: What is meant by Continuous Integration?  
Q5: What is the need for DevOps?  
Q6: What is Kubernetes? Why organizations are using it?  Related To: Kubernetes
Q7: What is DevOps engineer's duty with regards to Agile development?  
Q8: How is DevOps different from Agile/SDLC?  
Q9: Which are the top DevOps tools? Which tools have you worked on?  
Q10: What are the advantages of DevOps?  
Q11: Can we consider DevOps as an Agile methodology?  
Q12: Mention what are the key aspects or principle behind DevOps?  
Q13: What are the success factors for Continuous Integration?  
Q14: What does Containerization mean?  
Q15: What is the function of CI (Continuous Integration) server?  
Q16: Why is Continuous monitoring necessary?  
Q17: How have you handled failed deployments?  
Q18: What is post mortem meetings?  
Q19: What is the role of a configuration management tool in DevOps?  
Q20: What's the next thing you would automate in your current workflow?  
Q21: What's the difference between a blue/green deployment and a rolling deployment?  
Q22: Classify Cloud Platforms by category  
Q23: What is Chef?  
Q24: Explain a use case for Docker  
Q25: How would you make key aspects of a software system traceable?  
Q26: What is the difference between resource allocation and resource provisioning?  
Q27: How do all DevOps tools work together?  
Q28: How would you assess how “deployable” a system is?  
Q29: How would you prepare for a migration from one platform to another?  
Q30: If something breaks in production, how do you know about it?  
Q31: Explain Blue-Green Deployment Technique  
Q32: What are the differences between continuous integration, continuous delivery, and continuous deployment?  
Q33: Tell me about the worst-run/best-run outage you’ve been a part of. What made it bad/well-run?  
Q34: What do you know about serverless model?  
Q35: What is the difference between Kubernetes and Docker?  Related To: Docker, Kubernetes
Q36: Which problems does a container orchestration solve?  Related To: Docker, Kubernetes
Q37: How would you deploy software to 5000 nodes?  
Q38: What is Vagrant and what is it used for?  
Q39: How is container different from a virtual machine?  
Q40: What is Continuous Monitoring?  
Q41: Why Continuous Integration is important for Agile?  Related To: Agile & Scrum
Q42: How would you introduce Continuous Delivery in a successful, huge company for which the change from Waterfall to Continuous Delivery would be not trivial, because of the size and complexity of the business?  
Q43: What is Canary Releasing?  
Q44: Can you explain a relationship between container runtime and container orchestration?  Related To: Docker, Kubernetes

=======================
HTML [55]
=======================
Q1: What is an iframe and how it works?  
Q2: Explain meta tags in HTML  
Q3: What is the purpose of the alt attribute on images?  
Q4: What is the difference between span and div?  
Q5: How Can I Get Indexed Better by Search Engines?  
Q6: What were some of the key goals and motivations for the HTML5 specification?  
Q7: How can you highlight text in HTML?  
Q8: Briefly describe the correct usage of the following HTML5 semantic elements: <header>, <article>, <section>, <footer>  
Q9: What is Character Encoding?  
Q10: What is a self closing tag?   
Q11: hat's the difference between an "attribute" and a "property" in HTML?  
Q12: When is it appropriate to use the small element?  
Q13: Explain the difference between block elements and inline elements  
Q14: Explain almost standard, full standard and quirks mode  
Q15: How do you set IE compatibility mode?  
Q16: What's new in HTML 5?  
Q17: Have you used different HTML templating languages before?  
Q18: How do you serve a page with content in multiple languages?  
Q19: How do you change the direction of html text?  
Q20: What is an optional tag?  
Q21: What is the difference between <section> and <div>?  
Q22: What are defer and async attributes on a <script> tag?  
Q23: What is the purpose of cache busting and how can you achieve it?  
Q24: What are some differences that XHTML has compared to HTML?  
Q25: What are Web Workers?  
Q26: Where and why is the rel="noopener" attribute used?  
Q27: What is WebSQL?  
Q28: What does a DOCTYPE do?  
Q29: Describe the difference between a 'cookie', 'sessionStorage' and 'localStorage'.  
Q30: What is the DOM?  
Q31: What is HTML5 Web Storage? Explain localStorage and sessionStorage.  
Q32: Explain the difference between cookies, session and local storage  
Q33: Can a web page contain multiple <header> elements? What about <footer> elements?  
Q34: What are data- attributes good for?  
Q35: Discuss the differences between an HTML specification and a browser’s implementation thereof.  
Q36: What is WebSQL?  
Q37: What is the purpose of 'main' element?  
Q38: What are the building blocks of HTML5?  
Q39: Why to use HTML5 semantic tags?  
Q40: Describe the difference between , and .  
Q41: What is an HTML preprocessor and are you using it?  
Q42: What is progressive rendering?  
Q43: Why you would use a srcset attribute in an image tag? Explain the process the browser uses when evaluating the content of this attribute.  
Q44: What kind of things must you be wary of when designing or developing for multilingual sites?  
Q45: What is WebP?  
Q46: How would you select svg or canvas for your site?  
Q47: Why do I need a doctype and what does it do?  
Q48: What's the difference between Full Standard, Almost Standard and Quirks Mode?  
Q49: Could you generate a public key in HTML?  
Q50: Why is it generally a good idea to position CSS s between and JS s just before ? Do you know any exceptions?  
Q51: What is an IndexedDB?  
Q52: What is accessibility & ARIA role means in a web application?  
Q53: What are Web Components?  

Q54: Write a HTML table tag sequence that outputs the following  
Q55: Check HTML Markup Validity  

=======================
CSS [60]
=======================
Q1: Explain the three main ways to apply CSS styles to a web page  
Q2: What is CSS?  
Q3: How to use variables in Sass?  
Q4: Explain CSS sprites, and how you would implement them on a page or site  
Q5: Explain the CSS box model and the layout components that it consists of  
Q6: Have you played around with the new CSS Flexbox or Grid specs?  
Q7: Explain what is a @extend directive used for in Sass?  
Q8: List out the key features for Sass  
Q9: What is the difference between classes and IDs in CSS?  
Q10: What is a CSS rule?  
Q11: What is Sass?  
Q12: What existing CSS frameworks have you used locally, or in production? How would you change/improve them?  
Q13: Describe floats and how they work  
Q14: What Selector Nesting in Sass is used for?  
Q15: What is DOM (Document Object Model) and how is it linked to CSS?  
Q16: List out the data types that Sass supports  
Q17: Explain the usage of table-layout property  
Q18: What's the difference between SCSS and Sass?  
Q19: What are the advantages/disadvantages of using CSS preprocessors?  
Q20: Have you ever worked with retina graphics? If so, when and what techniques did you use?  
Q21: What's the difference between a relative, fixed, absolute and statically positioned element?  
Q22: What is CSS preprocessor and why to user one?  
Q23: What’s the difference between resetting and normalizing CSS? Which would you choose, and why?  
Q24: What does Accessibility (a11y) mean?  
Q25: How is responsive design different from adaptive design?  
Q26: What is CSS selectors? Name some.  
Q27: Describe pseudo-elements and discuss what they are used for  
Q28: How does CSS actually work (under the hood of browser)?  
Q29: Explain your understanding of the box model and how you would tell the browser in CSS to render your layout in different box models.  
Q30: What is a Grid System in CSS?  
Q31: How would you approach fixing browser-specific styling issues?  
Q32: What does * { box-sizing: border-box; } do? What are its advantages?  
Q33: Explain the purpose of clearing floats in CSS  
Q34: Can you explain the difference between coding a website to be responsive versus using a mobile-first strategy?  
Q35: Explain the basic rules of CSS Specificity  
Q36: What are the different ways to visually hide content (and make it available only for screen readers)?  
Q37: How do you optimize your webpages for print?  
Q38: Have you ever used a grid system, and if so, what do you prefer?  
Q39: Is there any reason you'd want to use translate() instead of absolute positioning, or vice-versa? And why?  
Q40: Describe z-index and how a stacking context is formed  

Q51: What is variable interpolation in Sass? Provide some examples.   
Q52: What is a Mixin and how to use on?  
Q53: How to create a zebra striped table with CSS?  
Q54: What will be the CSS output for the following Sass code?  
Q55: What the code fragment has the greater CSS specificity?   
Q56: What is the @content directive used for?  
Q57: Write down a selector that will match any links end in .zip, .ZIP, .Zip etc...  
Q58: What’s wrong with Sass nesting? Provide some example.  
Q59: What clearfix methods do you know? Provide some examples.  
Q60: How to style every element which has an adjacent item right before it?  

=======================
JavaScript [172]
=======================
Q1: What is typeof operator?  
Q2: What is the object type?  
Q3: Explain arrays in JavaScript  
Q4: What is Scope in JavaScript?  
Q5: Explain equality in JavaScript  
Q6: Explain what is Binary Search JSJavaPY Related To: Searching, Java
Q7: Explain what is Linear (Sequential) Search and when may we use one? JSPY Related To: Searching, Python
Q8: Explain Values and Types in JavaScript  
Q9: What is let keyword in JavaScript?  
Q10: Explain Null and Undefined in JavaScript  
Q11: What is strict mode?  
Q12: What is a Polyfill?  
Q13: Explain event bubbling and how one may prevent it  
Q14: What does use strict do?  
Q15: What language constructions do you use for iterating over object properties and array items?  
Q16: Why is it, in general, a good idea to leave the global scope of a website as-is and never touch it?  
Q17: What are some of the advantages/disadvantages of writing JavaScript code in a language that compiles to JavaScript?  
Q18: Why would you use something like the load event? Does this event have disadvantages? Do you know any alternatives, and why would you use those?  
Q19: Explain the same-origin policy with regards to JavaScript.  
Q20: What's the difference between throw Error('msg') vs throw new Error('msg')?  
Q21: What is the difference between == and ===?  
Q22: Is there anyway to force using strict mode in Node.js?  
Q23: What's the difference between Host objects and Native objects?  
Q24: Explain what is Interpolation Search JSPY Related To: Searching, Python
Q25: What is a Jump (or Block) Search? JSJavaPY Related To: Searching, Python
Q26: What is the difference between a shim and a polyfill?  
Q27: What is IIFEs (Immediately Invoked Function Expressions)?  
Q28: What is Coercion in JavaScript?  
Q29: What is the difference between Anonymous and Named functions?   
Q30: Describe Closure concept in JavaScript as best as you could  
Q31: How to compare two objects in JavaScript?  
Q32: Could you explain the difference between ES5 and ES6  
Q33: What will be the output of the following code?  
Q34: What is the drawback of creating true private in JavaScript?  
Q35: Explain the difference between undefined and not defined in JavaScript  
Q36: What will be the output of the following code?  
Q37: What are the advantages and disadvantages of using use strict?  
Q38: What is the definition of a Higher-Order Function?  
Q39: Explain the differences on the usage of foo between function foo() {} and var foo = function() {}  
Q40: What's the difference between using let and var to declare a variable in ES6?  
Q41: What are the benefits of using spread syntax in ES6 and how is it different from rest syntax?  
Q42: What is Currying?  
Q43: What are the differences between ES6 class and ES5 function constructors?  
Q44: When should I use Arrow Functions in ES6?  
Q45: What is the motivation for bringing Symbol to ES6?  
Q46: What's the difference between .call and .apply?  
Q47: Why should we use ES6 classes?  
Q48: What do you think of AMD vs CommonJS?  
Q49: What is the preferred syntax for defining enums in JavaScript?  
Q50: When should we use generators in ES6?  
Q51: What's a typical use case for anonymous functions?  
Q52: What is a closure, and how/why would you use one?  
Q53: Explain the difference between Object.freeze() vs const  
Q54: Why is extending built-in JavaScript objects not a good idea?  
Q55: What is generator in JS?  
Q56: Explain Function.prototype.bind.  
Q57: Suggest one simple way of removing duplicates from an array using ES6  
Q58: What is the difference between document load event and document DOMContentLoaded event?  
Q59: What advantages are using arrow functions?  
Q60: What is the purpose of setTimeout function?  Related To: Node.js
Q61: What is the new keyword in JavaScript?  
Q62: Explain Prototype Inheritance in JavaScript?  
Q63: What does the term Transpiling stand for?  
Q64: What is Hoisting in JavaScript?  
Q65: Check if a given string is a isomorphic  
Q66: Explain what is Hoisting in Javascript  
Q67: Explain the Prototype Design Pattern  
Q68: Describe the JS module design pattern  
Q69: What are the actual uses of ES6 WeakMap?  
Q70: How can you share code between files?  
Q71: What is the Temporal Dead Zone in ES6?  
Q72: When should you NOT use arrow functions in ES6? Name three or more cases.  
Q73: Can you give an example for destructuring an object or an array in ES6?  
Q74: Explain how JSONP works (and how it's not really Ajax)  
Q75: Can you describe the main difference between a .forEach loop and a .map() loop and why you would pick one versus the other?  
Q76: Could you compare usage of Module Pattern vs Constructor/Prototype pattern?  
Q77: Explain difference between: function Person(){}, var person = Person(), and var person = new Person()?  
Q78: What's the difference between a variable that is: null, undefined or undeclared? How would you go about checking for any of these states?  
Q79: What tools can be used to assure consistent code style?  
Q80: What's the difference between ES6 Map and WeakMap?  
Q81: Can you give an example of a curry function and why this syntax offers an advantage?  
Q82: In JavaScript, why is the this operator inconsistent?  
Q83: What is the difference between the await keyword and the yield keyword?   
Q84: Compare Async/Await and Generators usage to achive same functionality  
Q85: Is it possible to reset an ECMAScript 6 generator to its initial state?  
Q86: How to deep-freeze object in JavaScript?  
Q87: Is JavaScript a pass-by-reference or pass-by-value language?  

Q88: Explain how Bubble Sort works JSPY Related To: Sorting
Q89: Lucky sevens  
Q90: Simple clock angle  
Q91: Sum of several arrays  
Q92: Test divisors of three  
Q93: Oddball sum  
Q94: Sum of Array Plus One  
Q95: String Rotation  
Q96: Return the N-th value of the Fibonacci sequence. Solve in O(n) time JSJavaPY Related To: Fibonacci Series, Data Structures, Python
Q97: Return the N-th value of the Fibonacci sequence Recursively JSJavaPY Related To: Fibonacci Series, Data Structures, Java
Q98: Implement a Queue using two Stacks CSJSJavaPY Related To: Queues, Stacks, Java, C#
Q99: Explain how Insertion Sort works JSJavaPY Related To: Sorting, Python
Q100: Given a string, reverse each word in the sentence  
Q101: Find the missing number in O(n) time  
Q102: Remove duplicates of an array and return an array of only unique elements  
Q103: Implement enqueue and dequeue using only two stacks  
Q104: How to check if an object is an array or not? Provide some code.  
Q105: How to empty an array in JavaScript?  
Q106: Write a "mul" function which will properly when invoked as below syntax  
Q107: Write a function that would allow you to do this?  
Q108: Explain what a callback function is and provide a simple example  
Q109: How would you check if a number is an integer?  
Q110: Make this work  
Q111: Two sum problem  
Q112: Determine overlapping numbers in ranges  
Q113: Stock maximum profit  
Q114: Tree Level Order Print  
Q115: Step-by-step solution for step counting using recursion  
Q116: Implement Bubble Sort  
Q117: Get the N-th Fibonacci number with O(n) time and O(1) space complexity JSPY Related To: Fibonacci Series
Q118: Explain how Merge Sort works JSPY Related To: Divide & Conquer, Sorting
Q119: How to merge two sorted Arrays into a Sorted Array? JSJavaPY Related To: Arrays, Data Structures, Java, Python
Q120: Explain how Heap Sort works JSPY Related To: Heaps and Maps, Sorting, Data Structures
Q121: LIS: Find length of the longest increasing subsequence (LIS) in the array. Solve using DP. JSJavaPY Related To: Dynamic Programming, Data Structures, Python
Q122: Find all the Permutations of a String JSJavaPY Related To: Backtracking, Strings, Data Structures, Java, Python
Q123: Write a program for Recursive Binary Search JSJavaPY Related To: Searching, Java, Python
Q124: Check if parentheses are balanced using Stack JSJavaPY Related To: Stacks, Java, Python
Q125: Provide some examples of non-bulean value coercion to a boolean one  
Q126: Given an array of integers, find the largest product yielded from three of the integers  
Q127: Find the intersection of two arrays  
Q128: Given two strings, return true if they are anagrams of one another  
Q129: Write a recursive function that returns the binary string of a given decimal number  
Q130: Given an array of integers, find the largest difference between two elements such that the element of lesser value must come before the greater element  
Q131: Check if a given string is a palindrome. Case sensitivity should be taken into account.  
Q132: What will be the output of the following code?  
Q133: What will the following code output?  
Q134: How would you use a closure to create a private counter?  
Q135: Write a function that would allow you to do this  
Q136: FizzBuzz Challenge  
Q137: All Permutations (Anagrams) of a String  
Q138: Find all string combinations consisting only of 0, 1 and ?  
Q139: Generate all balanced bracket combinations  
Q140: Implement a queue using two stacks  
Q141: Throttle Function Implementation  
Q142: Find Word Positions in Text  
Q143: Merge two sorted linked lists  
Q144: Dutch national flag sorting problem  
Q145: Insert an interval into a list of sorted disjoint intervals  
Q146: Implement a queue using a linked list  
Q147: Quickly calculate the cube root of 6 digit numbers  
Q148: Implement pow(a,b) without multiplication or division  
Q149: How to use Memoization for N-th Fibonacci number?  JSJava Related To: Dynamic Programming, Fibonacci Series, Recursion
Q150: How to recursively reverse a Linked List? JSJavaPY Related To: Linked Lists, Recursion
Q151: Explain how Radix Sort works JSPY Related To: Sorting, Python
Q152: Explain how QuickSort works JSPY Related To: Divide & Conquer, Sorting, Data Structures
Q153: Calculate n-th Fibonacci number using Tail Recursion JSJava Related To: Fibonacci Series
Q154: Binet's formula: How to calculate Fibonacci numbers without Recursion or Iteration?  CSJSJavaPY Related To: Fibonacci Series, Data Structures, C#
Q155: Explain what is Fibonacci Search technique? CSJSJavaPY Related To: Divide & Conquer, Fibonacci Series, Searching, Data Structures, C#
Q156: Explain when and how to use Exponential (aka Doubling or Galloping) Search?  JSPY Related To: Searching
Q157: How does the this keyword work? Provide some code examples  
Q158: Create a function that will evaluate if a given expression has balanced parentheses using stacks  
Q159: Write a recursive function that performs a binary search  
Q160: Given an integer, determine if it is a power of 2. If so, return that number, else return -1  
Q161: What will be the output of the following code?  
Q162: What is Closure in JavaScript? Provide an example  
Q163: What will be the output of the following code?  
Q164: How would you create a private variable in JavaScript?  
Q165: How would you add your own method to the Array object so the following code would work?  
Q166: What will the following code output?  
Q167: When would you use the bind function?  
Q168: Explain why the following doesn't work as an IIFE. What needs to be changed to properly make it an IIFE?  
Q169: Transform Word  
Q170: Generating Fibonacci Sequence using ES6 generator functions JS Related To: Fibonacci Series
Q171: Copy a Linked List with Random (Arbitrary) Pointer using O(1) Space JSJavaPY Related To: Linked Lists
Q172: Describe the Revealing Module Pattern design pattern  

=======================
WCF [35]
=======================
Q1: What is WCF?  
Q2: Provide some scenarios when we could use WCF services  
Q3: Could you name basic WCF service components?  
Q4: What is a service contract in WCF?  
Q5: What are the features and advantage of WCF?  
Q6: Explain what is SOA?  
Q7: What are WCF Service Endpoints?  
Q8: Compare WCF vs ASP.NET Web API?  Related To: ASP.NET Web API
Q9: Is it True that ASP.NET Web API has Replaced WCF?  Related To: ASP.NET Web API
Q10: What is WCF Data Contract?  
Q11: Why we need Fault Contracts in WCF? Why not just use error codes?  
Q12: What are the Possible Ways of Hosting a WCF Service?   
Q13: When DataContract and ServiceContract should be used in an application ?  
Q14: What is WCF Binding and how many of them do you know?  
Q15: What is transport in WCF?  
Q16: What is an Operation Contract in WCF?  
Q17: Explain the difference between WCF vs ASP.NET Web API?  
Q18: Name some different types of contracts in WCF  
Q19: Why we need Streaming?  
Q20: Explain WCF Message exchange Pattern  
Q21: What are the differences between WCF and ASMX Web Services?  
Q22: What is Message Contract in WCF?  
Q23: What is meant by WS-*?  
Q24: When would we use binary encoder?  
Q25: When would you use Duplex WCF service?  
Q26: Can I use MessageContract instead of DataContract or in complement to DataContract?  
Q27: What is interoperability and how is it achieved with WCF services?  
Q28: Will it make any difference if I change the operation contract of methods having no return value by OperationContract (IsOneWay=true)?  
Q29: Explain Message Encoding in WCF and when to use one?  
Q30: Explain Binary vs MTOM vs Streaming in WCF?  
Q31: What is the main difference between Request-Response and Duplex in WCF Message Exchange Pattern?  
Q32: Could we use WSHttpBinding with Request-CallBack (also called Duplex) exchange pattern?  
Q33: What is the difference between hosting WCF service on IIS, Windows Service and self-hosted app?  
Q34: Should I use WCF or raw sockets?  
Q35: What replaces WCF in .Net Core?  
 
===========================
ADO.NET [33]
===========================
Q1: What is ADO.NET?  
Q2: What is exactly meaning of disconnected and connected approach in ADO.NET?  
Q3: What is Connection Pooling in ADO.NET?  
Q4: What do you understand by DataRelation class?  
Q5: What is the basic difference between ADO.NET and Entity Framework?  
Q6: What is the DataAdapter object in ADO.NET?  
Q7: Describe when you would use the DataView in ADO.NET?  
Q8: What are the ADO.NET components?  
Q9: What is SqlCommand object?  
Q10: How can you define the DataSet structure?  
Q11: What is the SqlCommandBuilder?  
Q12: What is the difference between ExecuteScalar, ExecuteReader and ExecuteNonQuery?  
Q13: What is the difference between DataView, DataTable and DataSet?  
Q14: What is Unit Of Work?  Related To: OOP
Q15: Could you explain me some of the main differences between Connection-oriented access and Connectionless access in ADO.NET?  
Q16: Mention what is the difference between ADO.NET and classic ADO?  
Q17: What are the differences between using SqlDataAdapter vs SqlDataReader for getting data from a DB?  
Q18: How could you control connection pooling behavior?   
Q19: What is the difference between Integrated Security = True and Integrated Security = SSPI?  
Q20: Is there anything faster than SqlDataReader in .NET?  
Q21: Is it necessary to manually close and dispose of SqlDataReader?  
Q22: What's better: DataSet or DataReader?  
Q23: Where should I use connected architecture approach?  
Q24: Could you explain some benefits of Repository Pattern?  Related To: OOP
Q25: What is the difference between OLE DB and ODBC data sources?  
Q26: How could you monitor connection pooling behavior?  
Q27: Can you explain the difference between a DataReader, a DataAdapter, a Dataset, and a DataView?  
Q28: Where should I use disconnected architecture approach?  
Q29: Name types of transactions in ADO.NET  
Q30: What is the difference between ADODB, OLEDB and ADO.NET?  
Q31: What is the best and fast way to insert 2 million rows of data into SQL Server?  
Q32: Under what scenarios would setting pooling=false in an ADO.NET connection string be of value when connecting to SQL Server?   
Q33: Name some problems that could occur with connection pooling  

=====================
jQuery [51]
=====================
Q1: What is jQuery?  
Q2: Is jQuery a library for client scripting or server scripting?  
Q3: Which is the starting point of code execution in jQuery?  
Q4: What is jQuery.noConflict?  
Q5: What is a CDN?  
Q6: What does dollar sign ($) means in jQuery?  
Q7: What is the use of jQuery .each() function?  
Q8: Is jQuery replacement of JavaScript?  
Q9: How JavaScript and jQuery are different?  
Q10: Is jQuery a W3C standard?  
Q11: Can we have multiple document.ready() function on the same page?  
Q12: Why do we use jQuery?  
Q13: What is the difference between .js and .min.js files?  
Q14: How do you select element by ID in jQuery?  
Q15: What is event.PreventDefault()?  
Q16: What is the difference between jquery.size() and jquery.length?  
Q17: Is there any difference between body.onload() and document.ready() function?  
Q18: What are selectors in jQuery and how many types of selectors are there?  
Q19: What are the fastest/slowest selectors in jQuery?  
Q20: Difference between $(this) and this in jQuery?  
Q21: Which is fast document.getElementByID('txtName') or $('#txtName')?  
Q22: How to create clone of any object using jQuery?  
Q23: What is difference between prop and attr?  
Q24: What is the difference between event.PreventDefault() and event.stopPropagation()?  
Q25: What is the difference between parent() and parents() methods in jQuery?  
Q26: What is the difference between eq() and get() methods in jQuery?  
Q27: What are various methods to make ajax request in jQuery?  
Q28: What is chaining in jQuery?  
Q29: When would you use AngularJS vs jQuery?  
Q30: What are deferred and promise object in jQuery?  
Q31: How do you attach a event to element which should be executed only once?  
Q32: What is the difference between event.PreventDefault() and return false?  
Q33: Is there any significant difference between event.preventDefault() vs. return false to stop event propagation?  
Q34: What is the difference between $('div') and $('<div/>') in jQuery?  
Q35: Is there any advantage of using $.ajax() for ajax call against $.get() or $.post()?  
Q36: Explain .bind() vs .live() vs .delegate() vs .on()  
Q37: What are the differences between JavaScript's window.onload and jQuery's $(document).ready() method?  
Q38: In what situation you would use multiple version of jQuery and how would you include them?  
Q39: How does caching helps and how to use caching in jQuery?   
Q40: How can I get jQuery to perform a synchronous, rather than asynchronous, Ajax request?  
Q41: What is the advantage of using protocol less URL while referencing jQuery from CDNs?  
Q42: Is it possible to get value of multiple CSS properties in single statement?  
Q43: What is the difference between event.stopPropagation and event.stopImmediatePropagation?  
Q44: Is it possible to hold or delay document.ready execution for sometime?  
Q45: How can I implement my own $(document).ready functionality without using jQuery?  

Q46: What does $("div") will select?  
Q47: How to select element having a particular class (.selected)?  
Q48: What does $('div.parent') will select?  
Q49: How jQuery selectors are executed?  
Q50: What is wrong with this code line $('#myid\\.3').text('blah blah!!!');  
Q51: Can we execute/run multiple Ajax request simultaneously in jQuery? If yes, then how?  

===========================
MSBI [30]
===========================
Q1. What is MSBI? What are the tools that MSBI comprises?
Q2. How is SSIS related to SQL Server?
Q3. What are the tools associated with SSIS?
Q4. What is a workflow? What do you mean by a control flow and a data flow?
Q5. Mention the errors in SSIS and explain how error handling works.
Q6. Define environmental variables in SSIS.
Q7. What are different lookup cache modes available in SSIS?
Q8. Explain the architecture of SSIS.
Q9. How can we do logging in to SSIS?
Q10.How do you deploy SSIS packages?
Q11. How can we organize SSIS packages on production?
Q12. Define query parameters in SSRS.
Q13. What are variables? Define the variable scope.
Q14. Define SSRS and also talk about the SSRS architecture.
Q15. Explain the Reporting Life Cycle in SSRS.
Q16. When shall we use a null data-driven subscription?
Q17. What do you mean by matrix in SSRS? What are sub-reports and how do we create them?
Q18. Define Report Model Project.
Q19. What do you mean by Report Server Project?
Q20. Define RS.exe Utility.
Q21. What are the three different parts of RDL files?
Q22. What are the different data sources used in SSRS?
Q23. Differentiate between Tabular and Matrix Reports.
Q24. How to send SSRS Reports from SSIS?
Q25. What is SSAS? List out its key features.
Q26. What is the significance of UDM in SSAS?
Q27. What is the architecture of SSAS?
Q28. What languages are used in SSAS?
Q29. How are cubes implemented in SSAS?
Q30. What is writeback? What are its preconditions?
